% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classes.R
\name{Plate}
\alias{Plate}
\title{Plate}
\description{
A class to represent the luminex plate. It contains information about
the samples and analytes that were examined on the plate as well as
some additional metadata and batch info
}
\examples{

plate_filepath <- system.file("extdata",
"CovidOISExPONTENT_CO.csv", package = "PvSTATEM",
mustWork = TRUE) # get the filepath of the csv dataset
layout_filepath <- system.file("extdata", "CovidOISExPONTENT_CO_layout.xlsx",
package = "PvSTATEM", mustWork = TRUE) # get the filepath of the layout file

plate <- read_data(plate_filepath, layout_filepath)

plate$summary()

}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{analytes}}{list of all analytes measured during an examination}

\item{\code{samples}}{list of all samples examined on a plate}

\item{\code{batch_info}}{a raw list containing all the metadata about
the plate read from the Luminex file}

\item{\code{calibration_info}}{a list containing calibration logs read from
the Luminex file}

\item{\code{audit_logs}}{a list containing audit logs read from Luminex file}

\item{\code{plate_name}}{\itemize{
\item plate name obtained from filename
}}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{number_of_samples}}{number of samples stored in the current plate}

\item{\code{analyte_names}}{list of all analyte names saved in the plate}

\item{\code{sample_names}}{list of all sample names}

\item{\code{examination_date}}{Metadata: date of the examination}

\item{\code{batch_name}}{Metdata: batch name}

\item{\code{min_events_per_bead}}{minimal number of events that is valid for one bead - sample and analyte}

\item{\code{check_if_blanks_already_adjusted}}{flag that specifies
if the blanks were already adjusted and its MFI values subtracted from
remaining samples}

\item{\code{warnings}}{list of lists of all warnings from all samples}

\item{\code{errors}}{list of lists of all errors from all samples}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Plate-new}{\code{Plate$new()}}
\item \href{#method-Plate-print}{\code{Plate$print()}}
\item \href{#method-Plate-summary}{\code{Plate$summary()}}
\item \href{#method-Plate-add_results_block}{\code{Plate$add_results_block()}}
\item \href{#method-Plate-check_batch_info}{\code{Plate$check_batch_info()}}
\item \href{#method-Plate-check_analyte_consistency}{\code{Plate$check_analyte_consistency()}}
\item \href{#method-Plate-check_beads_number}{\code{Plate$check_beads_number()}}
\item \href{#method-Plate-get_sample}{\code{Plate$get_sample()}}
\item \href{#method-Plate-get_sample_by_type}{\code{Plate$get_sample_by_type()}}
\item \href{#method-Plate-get_analyte_id}{\code{Plate$get_analyte_id()}}
\item \href{#method-Plate-get}{\code{Plate$get()}}
\item \href{#method-Plate-blank_adjustment}{\code{Plate$blank_adjustment()}}
\item \href{#method-Plate-check_MFI_after_adjustment}{\code{Plate$check_MFI_after_adjustment()}}
\item \href{#method-Plate-copy}{\code{Plate$copy()}}
\item \href{#method-Plate-clone}{\code{Plate$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Plate-new"></a>}}
\if{latex}{\out{\hypertarget{method-Plate-new}{}}}
\subsection{Method \code{new()}}{
creates a new \code{Plate} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Plate$new(
  analytes = list(),
  samples = list(),
  batch_info = list(),
  calibration_info = list(),
  audit_logs = list(),
  plate_name = ""
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analytes}}{(\code{list})
list of all analytes measured during an examination}

\item{\code{samples}}{(\code{list})
list of all samples examined on a plate}

\item{\code{batch_info}}{(\code{list}) \cr
a raw list containing all the metadata about the plate read from
the Luminex file}

\item{\code{calibration_info}}{(\code{list}) \cr
a list containing calibration logs read from Luminex file}

\item{\code{audit_logs}}{(\code{list})
a list containing audit logs read from Luminex file}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Plate-print"></a>}}
\if{latex}{\out{\hypertarget{method-Plate-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Plate$print(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Plate-summary"></a>}}
\if{latex}{\out{\hypertarget{method-Plate-summary}{}}}
\subsection{Method \code{summary()}}{
Function outputs basic information about the plate, such as examination date,
batch name, and sample types
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Plate$summary(..., include_names = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{include_names}}{If \code{include_names} parameter is \code{TRUE}, a
part from count of control samples, provides also their names.
By default \code{FALSE}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Plate-add_results_block"></a>}}
\if{latex}{\out{\hypertarget{method-Plate-add_results_block}{}}}
\subsection{Method \code{add_results_block()}}{
function adds block of information to the current plate

the analysis type should be added after the analysis,
otherwise there is no enough information about samples
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Plate$add_results_block(data_type, parsed_block)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Plate-check_batch_info"></a>}}
\if{latex}{\out{\hypertarget{method-Plate-check_batch_info}{}}}
\subsection{Method \code{check_batch_info()}}{
Function verifies if the batch info contain valid information
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Plate$check_batch_info()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Plate-check_analyte_consistency"></a>}}
\if{latex}{\out{\hypertarget{method-Plate-check_analyte_consistency}{}}}
\subsection{Method \code{check_analyte_consistency()}}{
checks analyte consistency - verifies if all of the analytes contained within the samples are listed in the \code{analytes} list of the plate object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Plate$check_analyte_consistency()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Plate-check_beads_number"></a>}}
\if{latex}{\out{\hypertarget{method-Plate-check_beads_number}{}}}
\subsection{Method \code{check_beads_number()}}{
function performs validity check - verifies which samples and analytes saved in the plate have the bead count lower than \code{min_events_per_bead}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Plate$check_beads_number(min_events_per_bead = self$min_events_per_bead)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{min_events_per_bead}}{lower bound of acceptable number of events. By default equals to \code{min_events_per_bead} parameter saved in the plate object}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
returns \code{TRUE} if there are samples with bead count lower than \code{min_events_per_bead}, otherwise \code{FALSE}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Plate-get_sample"></a>}}
\if{latex}{\out{\hypertarget{method-Plate-get_sample}{}}}
\subsection{Method \code{get_sample()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Plate$get_sample(sample)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sample}}{sample name or its id}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
sample object of given sample name or id
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Plate-get_sample_by_type"></a>}}
\if{latex}{\out{\hypertarget{method-Plate-get_sample_by_type}{}}}
\subsection{Method \code{get_sample_by_type()}}{
Function returns list of samples filtered by the type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Plate$get_sample_by_type(sample_type, exclude = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sample_type}}{type of the sample to be filtered. Possible values are:
SampleType$valid_sample_types}

\item{\code{exclude}}{If \code{FALSE} returns list of samples with given \code{sample_type},
otherwise returns all samples except for the specified \code{sample_type}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Plate-get_analyte_id"></a>}}
\if{latex}{\out{\hypertarget{method-Plate-get_analyte_id}{}}}
\subsection{Method \code{get_analyte_id()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Plate$get_analyte_id(analyte_name)}\if{html}{\out{</div>}}
}

\subsection{Returns}{
analyte id of given name
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Plate-get"></a>}}
\if{latex}{\out{\hypertarget{method-Plate-get}{}}}
\subsection{Method \code{get()}}{
Function returns data for a specific analyte and sample.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Plate$get(analyte, sample, data_type = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyte}}{An analyte name or its id of which data we want to extract}

\item{\code{sample}}{sample name or id}

\item{\code{data_type}}{if \code{NULL} returns whole column of the dataframe containing information about the sample.
Otherwise tries to select the exact \code{data_type} from the dataframe and returns a single value}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Data about a sample and analyte
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Plate-blank_adjustment"></a>}}
\if{latex}{\out{\hypertarget{method-Plate-blank_adjustment}{}}}
\subsection{Method \code{blank_adjustment()}}{
Function adjusts the values of test samples substracting values from BLANK samples to remove background light
In short it substracts the values from data in all samples, except from Blanks. It does not substract values from
\code{Count} values
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Plate$blank_adjustment(method = "avg", inplace = "TRUE")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{method}}{How the values of different blanks should be aggregated. By default \code{avg}. For now it is the only available method}

\item{\code{inplace}}{Whether the method should produce new plate with adjusted values or not, By default \code{TRUE} - operates on the current plate.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Plate-check_MFI_after_adjustment"></a>}}
\if{latex}{\out{\hypertarget{method-Plate-check_MFI_after_adjustment}{}}}
\subsection{Method \code{check_MFI_after_adjustment()}}{
Function verifies if there are any MFI values below zero
after blank removal
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Plate$check_MFI_after_adjustment()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Plate-copy"></a>}}
\if{latex}{\out{\hypertarget{method-Plate-copy}{}}}
\subsection{Method \code{copy()}}{
performs copy of the plate
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Plate$copy()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Plate-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Plate-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Plate$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
